rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Development mode rules - allows read/write for authenticated users
    
    // User profiles collection (used by user-profile-service.ts)
    match /userProfiles/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Audit logs for security events
    match /audit_logs/{document} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if request.auth != null;
    }
    
    // User profiles and their subcollections
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // User subcollections - the key fix for app structure
      match /{subcollection}/{document} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Explicitly allow all possible subcollections for clarity
      match /transactions/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /budgets/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /goals/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /assets/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /liabilities/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /categories/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /accounts/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /sessions/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /loginActivities/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /security/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Family documents
    match /families/{familyId} {
      allow read, write: if request.auth != null;
    }
    
    // Family invitations
    match /family_invitations/{invitationId} {
      allow read, write: if request.auth != null;
    }
    
    // Legacy top-level collections (for backwards compatibility)
    match /transactions/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /budgets/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /goals/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /categories/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /accounts/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /assets/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /debts/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Test collections for connection testing
    match /test/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /public-test/{document=**} {
      allow read, write: if true;
    }
    
    // Diagnostic collections - allow full access for testing
    match /test-diagnostics/{document=**} {
      allow read, write: if true;
    }
    
    match /diagnostic-logs/{document=**} {
      allow read, write: if true;
    }
    
    // Connection test collection (used by init-collections.ts)
    match /_test_/{document=**} {
      allow read, write: if true;
    }
    
    // Development/staging collections for testing
    match /dev-test/{document=**} {
      allow read, write: if true;
    }
    
    // Temporary collections for debugging
    match /temp/{document=**} {
      allow read, write: if true;
    }
  }
} 